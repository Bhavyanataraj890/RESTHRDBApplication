package Org.Bhavya.HRApplication.HRApp.Resource;
import java.util.ArrayList;
import java.util.Arrays;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RestController;

import Org.Bhavya.HRApplication.HRApp.Model.Contact;
import Org.Bhavya.HRApplication.HRApp.Model.Employee;
import Org.Bhavya.HRApplication.HRApp.Service.EmployeeService;

import java.util.List;
import java.util.Map;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.UriInfo;

//@Path("/employees")
@Consumes(MediaType.APPLICATION_JSON)
@Produces(MediaType.APPLICATION_JSON)
@RestController
public class EmployeeResources {
	@Autowired
	EmployeeService eService;
	

	@GetMapping("/employees")
	public List<Employee> getEmployee(@Context UriInfo uriInfo)
	{
		
				List<Employee> emp = eService.getAllEmployees();
				for(Employee e : emp)
				{
				String url = uriInfo
				.getBaseUriBuilder()
				.path(EmployeeResources.class)
				.path(e.getEmpId())
				.build()
				.toString();
				e.addLink(url, "self");
				}
				
				return emp;
	}
	
	@GetMapping("/Specific")
	public Map<String, Contact> getEmployeeSpec()
	{
		return eService.getSpecifcEmployees();
	}	

	@GetMapping("/{empId}")
	public Employee getEmployee(@PathParam("empId") String empId, @Context UriInfo uriInfo)
	{
		
		Employee emp = eService.getEmployee(empId);
		String url = uriInfo
		.getBaseUriBuilder()
		.path(EmployeeResources.class)
		.path(emp.getEmpId())
		.build()
		.toString();
		emp.addLink(url, "self");
		return emp;
		
	}
	
	@PostMapping("/employees")
	public Employee addEmployee(Employee emp)
	{
		return eService.addEmployee(emp);
	}
	

	@PutMapping("/{empId}")
	public Employee updateEmployee(@PathParam("empId") String empId, Employee emp)
	{
		emp.setEmpId(empId);
		return eService.updateEmployee(emp);
	}
	
	

	@DeleteMapping("/{empId}")
	public void deleteEmployee(@PathParam("empId") String empId)
	{
		eService.removeEmployee(empId);	
	}
	
	
}
